From: Sergey Sharybin <sergey@blender.org>
Date: Mon, 21 Nov 2016 21:34:50 +0100
Subject: fix_ppc64el_FTBFS

---
 extern/clew/include/clew.h               | 2 +-
 extern/glog/src/stacktrace_powerpc-inl.h | 2 +-
 intern/cycles/device/device_opencl.cpp   | 4 ++--
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/extern/clew/include/clew.h b/extern/clew/include/clew.h
index 1f79c1248..08040af4b 100644
--- a/extern/clew/include/clew.h
+++ b/extern/clew/include/clew.h
@@ -369,7 +369,7 @@ typedef unsigned int cl_GLenum;
 #endif
 
 /* Define basic vector types */
-#if defined( __VEC__ )
+#if defined( __VEC__ ) && !(defined(__PPC64__) && defined(__LITTLE_ENDIAN__))
    #include <altivec.h>   /* may be omitted depending on compiler. AltiVec spec provides no way to detect whether the header is required. */
    typedef vector unsigned char     __cl_uchar16;
    typedef vector signed char       __cl_char16;
diff --git a/extern/glog/src/stacktrace_powerpc-inl.h b/extern/glog/src/stacktrace_powerpc-inl.h
index 1090ddedb..03b91089a 100644
--- a/extern/glog/src/stacktrace_powerpc-inl.h
+++ b/extern/glog/src/stacktrace_powerpc-inl.h
@@ -111,7 +111,7 @@ int GetStackTrace(void** result, int max_depth, int skip_count) {
       result[n++] = *(sp+2);
 #elif defined(_CALL_SYSV)
       result[n++] = *(sp+1);
-#elif defined(__APPLE__) || (defined(__linux) && defined(__PPC64__))
+#elif defined(__APPLE__) || ((defined(__linux) || defined(__linux__)) && defined(__PPC64__))
       // This check is in case the compiler doesn't define _CALL_AIX/etc.
       result[n++] = *(sp+2);
 #elif defined(__linux)
diff --git a/intern/cycles/device/device_opencl.cpp b/intern/cycles/device/device_opencl.cpp
index dce1d3753..42eabaf54 100644
--- a/intern/cycles/device/device_opencl.cpp
+++ b/intern/cycles/device/device_opencl.cpp
@@ -20,8 +20,6 @@
 #include <stdlib.h>
 #include <string.h>
 
-#include "clew.h"
-
 #include "device.h"
 #include "device_intern.h"
 
@@ -37,6 +35,8 @@
 #include "util_path.h"
 #include "util_time.h"
 
+#include "clew.h"
+
 CCL_NAMESPACE_BEGIN
 
 #define CL_MEM_PTR(p) ((cl_mem)(uintptr_t)(p))
